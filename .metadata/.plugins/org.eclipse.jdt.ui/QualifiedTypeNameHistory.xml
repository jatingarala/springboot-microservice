<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
    <fullyQualifiedTypeName name="javax.persistence.Column"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="com.address.repo.AddressRepository"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="com.address.services.AddressService"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="javax.persistence.Transient"/>
    <fullyQualifiedTypeName name="antlr.collections.List"/>
    <fullyQualifiedTypeName name="com.google.gson.reflect.TypeToken"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="javax.websocket.server.PathParam"/>
    <fullyQualifiedTypeName name="lombok.ToString"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="com.employee.entity.Employee"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="com.employee.dto.EmployeeDTO"/>
    <fullyQualifiedTypeName name="org.springframework.data.repository.query.Param"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.Query"/>
    <fullyQualifiedTypeName name="com.address.entity.Address"/>
    <fullyQualifiedTypeName name="org.modelmapper.ModelMapper"/>
    <fullyQualifiedTypeName name="com.address.dto.AddressDTO"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.web.reactive.function.client.WebClient"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.DiscoveryClient"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalancerClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalanced"/>
    <fullyQualifiedTypeName name="com.employee.openfeignclient.AddressClient"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.employee.dto.AddressDTO"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
</qualifiedTypeNameHistroy>
